# {{ ansible_managed }}
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE file.

Include /var/www/{{ item.key }}/current_release.apache2.conf

Define PROJECT_ROOT /var/www/{{ item.key }}
Define SHARED_ROOT /var/www/{{ item.key }}/shared
Define RELEASE_ROOT /var/www/{{ item.key }}/releases/${DEPLOYED_RELEASE}

<VirtualHost *:80>
  ServerAdmin {{ email_address }}
  {% if development is defined %}
    ServerName {{ item.key }}.{{ ansible_default_ipv4.address }}.xip.io
  {% else %}
    ServerName {{ item.key }}
    {% if item.value.aliases is defined %}
      ServerAlias {{ item.value.aliases | join(" ") }}
    {% endif %}
  {% endif %}

  ErrorLog ${APACHE_LOG_DIR}/{{ item.key }}.error.log
  CustomLog ${APACHE_LOG_DIR}/{{ item.key }}.access.log combined

  {% if development is defined %}
    Redirect permanent "/" "https://{{ item.key }}.{{ ansible_default_ipv4.address }}.xip.io/"
  {% else %}
    Redirect permanent "/" "https://{{ item.key }}/"
  {% endif %}
</VirtualHost>

<IfModule mod_ssl.c>
  <VirtualHost *:443>
    ServerAdmin {{ email_address }}
    {% if development is defined %}
      ServerName {{ item.key }}.{{ ansible_default_ipv4.address }}.xip.io
    {% else %}
      ServerName {{ item.key }}
      {% if item.value.aliases is defined %}
        ServerAlias {{ item.value.aliases | join(" ") }}
      {% endif %}
    {% endif %}

    ErrorLog ${APACHE_LOG_DIR}/{{ item.key }}.error.log
    CustomLog ${APACHE_LOG_DIR}/{{ item.key }}.access.log combined

    DocumentRoot ${RELEASE_ROOT}/public

    SetEnv SHARED_ROOT ${SHARED_ROOT}

    Include /usr/lib/python3/dist-packages/certbot_apache/options-ssl-apache.conf
    {% if lets_encrypt_certificates is defined and item.key in lets_encrypt_certificates %}
      SSLCertificateFile /etc/letsencrypt/live/{{ item.key }}/fullchain.pem
      SSLCertificateKeyFile /etc/letsencrypt/live/{{ item.key }}/privkey.pem
    {% else %}
      SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem
      SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
    {% endif %}

    {% if development is not defined %}
      <If "%{HTTP_HOST} != '{{ item.key }}'">
        Redirect permanent "/" "https://{{ item.key }}/"
      </If>
    {% endif %}

    <IfModule mod_headers.c>
      Header always set Strict-Transport-Security "max-age=15552000; includeSubDomains"
    </IfModule>

    # Allow individual site customisations at the virtual host level.
    IncludeOptional ${RELEASE_ROOT}/private/apache2/virtualhost.apache.con[f]

    <Directory ${RELEASE_ROOT}/public>
      {% if item.value.auth.password is defined and item.value.auth.username is defined %}
        AuthType Basic
        AuthName "{{ item.key }}"
        AuthBasicProvider file
        AuthUserFile "/var/www/{{ item.key }}/shared/protected/.htpasswd"
        Require user {{ item.value.auth.username }}
      {% endif %}

      <IfModule mod_rewrite.c>
        RewriteEngine on
        RewriteBase /

        # Remove groups of slashes.
        RewriteCond %{THE_REQUEST} //
        RewriteRule ^.*$ $0 [L,NE,R=permanent]

        # Remove "index.html" and "index.php" from URLs.
        RewriteCond %{REQUEST_FILENAME} -f
        RewriteCond %{THE_REQUEST} ^.*/index\.(html|php)
        RewriteRule ^(.*)index\.(html|php)$ $1 [L,NE,R=permanent]

        # Remove file extensions from some URLs.
        RewriteCond %{REQUEST_FILENAME} -f
        # TODO: Use negative lookahead to combine the two conditions?
        RewriteCond %{THE_REQUEST} !^.*/index\.html
        RewriteCond %{THE_REQUEST} ^.*\.html
        RewriteRule ^(.*).html$ $1 [L,NE,R=permanent]
        RewriteCond %{REQUEST_FILENAME}\.html -f
        RewriteRule ^([^\.]+)$ $1.html [L,NC]
      </IfModule>

      IncludeOptional ${RELEASE_ROOT}/private/apache2/directory.apache.con[f]
    </Directory>
  </VirtualHost>
</IfModule>
