# Installs and configures various Python distributions.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

---
- name: 'Ensure download cache directory exists'
  ansible.builtin.file:
    path: '{{ python__download_cache_directory }}'
    group: 'root'
    mode: '0777'
    owner: 'root'
    state: 'directory'

- name: 'Ensure base packages for system Python are installed'
  ansible.builtin.apt:
    force_apt_get: true
    name:
      - 'python3-pip'
      - 'python3-venv'
    state: 'present'

- name: 'Get status of existing non-system Python installation'
  ansible.builtin.stat:
    path: "/usr/local/python/bin/python{{ python__version | regex_search('\\d.\\d{1,}') }}"
  changed_when: false
  register: __python_binary

- name: 'Get version of existing non-system Python installation'
  ansible.builtin.command: "/usr/local/python/bin/python{{ python__version | regex_search('\\d.\\d{1,}') }} --version"
  changed_when: false
  failed_when: false
  register: __python_version
  when: __python_binary.stat.exists

- name: 'Ensure Python {{ python__version }} is installed' # noqa: name[template]
  when: python__version not in (__python_version.stdout | default('') | trim)
  block:
    - name: 'Ensure the Python binary archive is downloaded'
      ansible.builtin.get_url:
        checksum: '{{ python__archive_checksum }}'
        dest: '{{ python__download_cache_directory }}/{{ python__archive_url | basename }}'
        group: 'root'
        mode: 0755
        owner: 'root'
        url: '{{ python__archive_url }}'

    - name: 'Ensure existing Python installation is removed'
      ansible.builtin.file:
        path: '/usr/local/python'
        state: 'absent'

    - name: 'Ensure base Python directory is present'
      ansible.builtin.file:
        group: 'root'
        mode: '0755'
        owner: 'root'
        path: '/usr/local/python'
        state: 'directory'

    - name: 'Ensure Python {{ python__version }} is installed' # noqa: name[template]
      ansible.builtin.unarchive:
        dest: '/usr/local/python'
        extra_opts:
          - '--strip-components=1'
        group: 'root'
        owner: 'root'
        src: '{{ python__download_cache_directory }}/{{ python__archive_url | basename }}'

- name: "Ensure user-wide development-related Python packages are installed (using \"pip{{ python__version.split('.')[0:2] | join('.') }}\")"
  ansible.builtin.pip:
    executable: "/usr/local/python/bin/pip{{ python__version.split('.')[0:2] | join('.') }}"
    extra_args: '--user'
    name: '{{ item }}'
  become: true
  become_user: '{{ python__user_username }}'
  loop: '{{ python__user_level_packages }}'
