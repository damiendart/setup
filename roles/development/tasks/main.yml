# This role installs and configures development environment stuff.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

---
# This role stores downloaded files that have been verified by file
# checksums to prevent unnecessary redownloading when tasks are rerun.
- name: "Ensure download cache directory exists"
  ansible.builtin.file:
    path: '{{ development__download_cache_directory }}'
    group: 'root'
    mode: '0777'
    owner: 'root'
    state: 'directory'

# For Apache to be able to serve files, it must also be able to search
# the containing directories as well as all parent directories up to
# the root of the filesystem. For more information, please see
# <https://cwiki.apache.org/confluence/display/httpd/13PermissionDenied>.
- name: 'Ensure Apache can search the administrator home directory'
  ansible.posix.acl:
    entity: 'www-data'
    etype: 'group'
    path: '/home/{{ development__user_username }}'
    permissions: 'x'
    state: 'present'
  when: '"webserver" in ansible_play_role_names'

- name: 'Ensure personal projects directory exists in administrator home directory'
  ansible.builtin.file:
    group: '{{ development__user_username }}'
    # The personal projects directory has relaxed permissions to allow
    # Apache access to directories within it.
    mode: 0755
    owner: '{{ development__user_username }}'
    path: '/home/{{ development__user_username }}/{{ development__projects_folder }}'
    state: 'directory'

- name: 'Ensure base development-related packages are installed'
  ansible.builtin.apt:
    force_apt_get: true
    name:
      - 'build-essential'
      - 'python3-pip'
      - 'tig'
      - 'tmux'
      - 'tree'
      # "vim-gtk3" includes features that may be useful when using a GUI
      # (for example, copy-to-clipboard support).
      - 'vim{{ "-gtk3" if development__run_gui_tasks }}'
    state: 'present'

- name: 'Ensure base development-related Python packages are installed in administrator home directory'
  ansible.builtin.pip:
    executable: '/usr/bin/pip3'
    extra_args: '--user'
    name:
      - 'virtualenv'
      - 'virtualenvwrapper'
  become: true
  become_user: '{{ development__user_username }}'

- name: 'Ensure base development-related binary archives and Debian packages are downloaded'
  ansible.builtin.get_url:
    checksum: '{{ item.checksum }}'
    dest: '{{ development__download_cache_directory }}/{{ item.filename | default(item.url | basename) }}'
    group: 'root'
    mode: 0755
    owner: 'root'
    url: '{{ item.url }}'
  loop: '{{ development__binary_archives + development__debian_packages }}'
  loop_control:
    label: '{{ item.url }}'

- name: 'Ensure base development-related Debian packages are installed'
  ansible.builtin.apt:
    deb: '{{ development__download_cache_directory }}/{{ item.url | basename }}'
    state: 'present'
  loop: '{{ development__debian_packages }}'
  loop_control:
    label: '{{ item.url | basename }}'

- name: 'Ensure base development-related binaries from archives are installed'
  ansible.builtin.unarchive:
    dest: '/usr/local/bin'
    extra_opts: '{{ item.extra_opts | default([]) }}'
    group: 'root'
    include: '{{ item.binaries | default([]) }}'
    mode: 0755
    owner: 'root'
    remote_src: true
    src: '{{ development__download_cache_directory }}/{{ item.filename | default(item.url | basename) }}'
  loop: '{{ development__binary_archives }}'
  loop_control:
    label: '{{ item.filename | default(item.url | basename) }}'

- name: 'Include dotfiles installation tasks'
  ansible.builtin.include_tasks: 'dotfiles.yml'

- name: 'Include entr building and installation tasks'
  ansible.builtin.include_tasks: 'entr.yml'

- name: 'Include tasks for hosts with GUIs'
  ansible.builtin.include_tasks: 'gui.yml'
  when: development__run_gui_tasks | bool

- name: 'Include VirtualBox installation tasks'
  ansible.builtin.include_tasks: 'virtualbox.yml'

- name: 'Include Open VM Tools installation tasks'
  ansible.builtin.include_tasks: 'open-vm-tools.yml'
