# This role installs and configures my development-specific stuff.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

---
- name: 'Ensure the NodeSource package signing key is present for APT'
  ansible.builtin.apt_key:
    state: 'present'
    url: 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key'

- name: 'Ensure NodeSource repository is present in APT sources list'
  ansible.builtin.apt_repository:
    repo: 'deb https://deb.nodesource.com/node_{{ development__node_major_version }}.x {{ ansible_distribution_release }} main'
    state: 'present'

- name: 'Ensure development-related packages are installed'
  ansible.builtin.apt:
    force_apt_get: true
    name:
      - 'build-essential'
      - 'nodejs'
      - 'python3-pip'
      - 'tig'
      - 'tree'
      - 'vim'
    state: 'present'

- name: 'Ensure development-related Python packages are installed in administrator home directory'
  ansible.builtin.pip:
    executable: '/usr/bin/pip3'
    extra_args: '--user'
    name:
      - 'ranger-fm'
      - 'virtualenv'
      - 'virtualenvwrapper'
  become: true
  become_user: '{{ development__user_username }}'

- name: 'Ensure development-related binaries are installed'
  ansible.builtin.unarchive:
    dest: '/usr/local/bin'
    exclude:
      - '*.txt'
      - '*.md'
      - 'complete'
      - 'COPYING'
      - 'doc'
      - 'LICENSE*'
      - 'UNLICENSE'
    extra_opts:
      - '--transform'
      - 's/^shellcheck-v{{ development__shellcheck_version }}\///'
      - '--transform'
      - 's/^ripgrep-{{ development__ripgrep_version }}-x86_64-unknown-linux-musl\///'
    group: 'root'
    mode: 0755
    owner: 'root'
    remote_src: true
    src: '{{ item }}'
  loop:
    - 'https://github.com/BurntSushi/ripgrep/releases/download/{{ development__ripgrep_version }}/ripgrep-{{ development__ripgrep_version }}-x86_64-unknown-linux-musl.tar.gz' # noqa 204
    - 'https://github.com/go-task/task/releases/download/v3.0.0/task_linux_amd64.tar.gz'
    - 'https://github.com/junegunn/fzf/releases/download/{{ development__fzf_version }}/fzf-{{ development__fzf_version }}-linux_amd64.tar.gz'
    - 'https://github.com/koalaman/shellcheck/releases/download/v{{ development__shellcheck_version }}/shellcheck-v{{ development__shellcheck_version }}.linux.x86_64.tar.xz' # noqa 204
    - 'https://releases.hashicorp.com/packer/{{ development__packer_version }}/packer_{{ development__packer_version }}_linux_amd64.zip'

# The BrowserStack Local binary archive doesn't play nicely with the
# others above, because reasons. (The "unzip" command used by the
# "unarchive" module errors out with "-fn or any combination of -c, -l,
# -p, -t, -u and -v options invalid", even though none of those flags
# are used.) Extracting the binary in a seperate task is the least
# arduous workaround.
- name: 'Ensure the BrowserStack Local binary is installed'
  ansible.builtin.unarchive:
    dest: '/usr/local/bin'
    group: 'root'
    mode: 0755
    owner: 'root'
    remote_src: true
    src: 'https://www.browserstack.com/browserstack-local/BrowserStackLocal-linux-x64.zip'

- name: 'Ensure fzf supplimentary files are installed'
  ansible.builtin.get_url:
    dest: '/usr/local/etc/fzf-{{ item }}'
    group: 'root'
    mode: 0755
    owner: 'root'
    url: 'https://raw.githubusercontent.com/junegunn/fzf/{{ development__fzf_version }}/shell/{{ item }}'
  loop:
    - 'completion.bash'
    - 'key-bindings.bash'

- name: 'Ensure personal projects directory exists in administrator home directory'
  ansible.builtin.file:
    group: '{{ development__user_username }}'
    mode: 0700
    owner: '{{ development__user_username }}'
    path: '/home/{{ development__user_username }}/shed'
    state: 'directory'

- name: 'Run GUI-based development tasks'
  tags:
    - 'gui'
  block:
    - name: 'Ensure fonts directory exists in administrator home directory'
      ansible.builtin.file:
        group: '{{ development__user_username }}'
        mode: 0700
        owner: '{{ development__user_username }}'
        path: '/home/{{ development__user_username }}/.fonts/iosevka'
        state: 'directory'

    - name: 'Ensure the Iosevka font files are installed'
      ansible.builtin.unarchive:
        dest: '/home/{{ administrator_username }}/.fonts/iosevka'
        exclude: '{{ development__iosevka_archive_excludes }}'
        group: '{{ development__user_username }}'
        owner: '{{ development__user_username }}'
        remote_src: true
        src: 'https://github.com/be5invis/Iosevka/releases/download/{{ development__iosevka_version }}/{{ development__iosevka_archive_filename }}'

    - name: 'Ensure the PhpStorm snap is installed'
      community.general.snap:
        classic: true
        name: 'phpstorm'
        state: 'present'
  when: development__run_gui_tasks | bool

- include: 'dotfiles.yml'
- include: 'virtualbox.yml'
- include: 'open-vm-tools.yml'
- include: 'rust.yml'
