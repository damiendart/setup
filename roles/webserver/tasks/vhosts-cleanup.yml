# Cleans up any virtual-host-related and website deployment detritus.
#
# There is some gnarly Jinja filter usage here, so as a precaution
# changes will only be made when the "webserver__vhosts_cleanup"
# variable is set to a truthy value; that way you can use the dry-run to
# review what gets deleted.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

---
- name: 'Get all virtual host directories'
  ansible.builtin.find:
    excludes: '^\.\.?$'
    file_type: 'directory'
    paths: '/var/www'
  register: __vhost_directories

- name: 'Get all virtual host configuration files'
  ansible.builtin.find:
    excludes: '^\.\.?$'
    paths: '/etc/apache2/sites-available'
  register: __vhost_conf_files

- name: 'Get configuration files for active virtual hosts'
  ansible.builtin.find:
    excludes: '^\.\.?$'
    file_type: 'link'
    paths: '/etc/apache2/sites-enabled'
  register: __vhost_conf_links

- name: 'Get configuration files for active virtual hosts'
  ansible.builtin.find:
    excludes: '^\.\.?$'
    file_type: 'link'
    paths: '/etc/apache2/sites-enabled'
  register: __vhost_conf_links

# The "deploy_to_vhost" role installs scheduled task helper scripts
# when deploying a release to a virtual host.
- name: 'Get all scheduled task helper scripts'
  ansible.builtin.find:
    paths:
      - '/etc/cron.hourly'
      - '/etc/cron.daily'
      - '/etc/cron.weekly'
      - '/etc/cron.monthly'
    patterns:
      - '^vhost-.*'
  register: __cron_scripts

- name: 'Ensure virtual-host-related detritus no longer exists'
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'absent'
  when: webserver__vhosts_cleanup | default(False)
  loop: >
    {{
      __vhost_directories.files
        | map(attribute='path')
        | map('regex_replace', '/var/www/(html)?')
        | reject('equalto', '')
        | difference(webserver__vhosts.keys())
        | map('regex_replace', '^', '/var/www/')
      + __vhost_conf_files.files
        | map(attribute='path')
        | map('replace', '/etc/apache2/sites-available/', '')
        | map('replace', '.conf', '')
        | reject('equalto', 'default-ssl')
        | reject('equalto', '000-default')
        | difference(webserver__vhosts.keys() | list + [('00-' ~ webserver__server_name)])
        | map('regex_replace', '^', '/etc/apache2/sites-available/')
        | map('regex_replace', '$', '.conf')
      + __vhost_conf_links.files
        | map(attribute='path')
        | map('replace', '/etc/apache2/sites-enabled/', '')
        | map('replace', '.conf', '')
        | difference(webserver__vhosts.keys() | list + [('00-' ~ webserver__server_name)])
        | map('regex_replace', '^', '/etc/apache2/sites-enabled/')
        | map('regex_replace', '$', '.conf')
      | default([])
    }}
  notify: 'Reload Apache'

- name: 'Ensure scheduled-task-related detritus no longer exists'
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'absent'
  when: webserver__vhosts_cleanup | default(False)
  loop: >
    {{
      __cron_scripts.files
        | map(attribute='path')
        | difference(
          [
            '/etc/cron.hourly',
            '/etc/cron.daily',
            '/etc/cron.weekly',
            '/etc/cron.monthly',
          ]
            | product(webserver__vhosts.keys() | map('replace', '.', '-'))
            | map('join', '/vhost-')
        )
    }}
