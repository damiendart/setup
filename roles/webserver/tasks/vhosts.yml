# The following tasks configures Apache virtual hosts.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

---
- name: 'Ensure virtual hosts base directories exist'
  ansible.builtin.file:
    group: 'www-data'
    mode: 0750
    owner: '{{ webserver__administrator_username }}'
    path: '/var/www/{{ item.key }}'
    state: 'directory'
  loop: '{{ webserver__vhosts | dict2items }}'
  loop_control:
    label: '{{ item.key }}'

- name: 'Ensure Apache virtual hosts configuration files exist'
  ansible.builtin.template:
    dest: '/etc/apache2/sites-available/{{ "00-" if item.key == webserver__server_name else "" }}{{ item.key }}.conf'
    group: 'root'
    mode: 0600
    owner: 'root'
    src: 'virtualhost.conf.j2'
  loop: '{{ webserver__vhosts | dict2items }}'
  loop_control:
    label: '{{ item.key }}'
  notify: 'Reload Apache'

- name: 'Ensure ".htpasswd" files exist for password-protected Apache virtual hosts'
  community.general.htpasswd:
    group: 'www-data'
    mode: 0640
    name: '{{ item.value.auth.username }}'
    owner: 'root'
    password: '{{ item.value.auth.password }}'
    path: '/var/www/{{ item.key }}/.htpasswd'
  when: item.value.auth.password is defined and item.value.auth.username is defined
  loop: '{{ webserver__vhosts | dict2items }}'
  loop_control:
    label: '{{ item.key }}'
  notify: 'Reload Apache'
  no_log: true

- name: 'Ensure Apache virtual hosts are active'
  ansible.builtin.command: 'a2ensite {{ "00-" if item.key == webserver__server_name else "" }}{{ item.key }}.conf'
  args:
    creates: '/etc/apache2/sites-enabled/{{ "00-" if item.key == webserver__server_name else "" }}{{ item.key }}.conf'
  loop: '{{ webserver__vhosts | dict2items }}'
  loop_control:
    label: '{{ item.key }}'
  notify: 'Reload Apache'

- name: 'Ensure unnecessary Apache virtual hosts are inactive'
  ansible.builtin.command: 'a2dissite {{ item }}.conf'
  args:
    removes: '/etc/apache2/sites-enabled/{{ item }}.conf'
  loop:
    - '000-default'
    - 'default-ssl'
  notify:
    - 'Reload Apache'

- name: 'Ensure "/etc/hosts" contains entries for virtual hosts'
  ansible.builtin.blockinfile:
    block: |
      {% for hostname in webserver__vhosts.keys() %}
        127.0.0.1 {{ hostname }}
      {% endfor %}
    path: '/etc/hosts'
  when: webserver__add_vhosts_to_etc_hosts
