# Installs Go using a binary archive.
#
# This file was written by Damien Dart, <damiendart@pobox.com>. This is
# free and unencumbered software released into the public domain. For
# more information, please refer to the accompanying "UNLICENCE" file.

---
- name: 'Ensure download cache directory exists'
  ansible.builtin.file:
    path: '{{ golang__download_cache_directory }}'
    group: 'root'
    mode: '0777'
    owner: 'root'
    state: 'directory'

- name: 'Get status of existing Go installation'
  ansible.builtin.stat:
    path: '/usr/local/go/VERSION'
  changed_when: false
  register: __go_version_status

- name: 'Get version of existing Go installation'
  ansible.builtin.slurp:
    src: '/usr/local/go/VERSION'
  changed_when: false
  register: __go_version
  when: __go_version_status.stat.exists

- name: 'Ensure Go {{ golang__golang_version }} is installed' #noqa: name[template]
  when: golang__golang_version not in (__go_version.content | default('') | b64decode)
  block:
    - name: 'Ensure the Go binary archive is downloaded'
      ansible.builtin.get_url:
        checksum: '{{ golang__golang_archive_checksum }}'
        dest: '{{ golang__download_cache_directory }}/go{{ golang__golang_version }}.linux-amd64.tar.gz'
        group: 'root'
        mode: '0755'
        owner: 'root'
        url: 'https://golang.org/dl/go{{ golang__golang_version }}.linux-amd64.tar.gz'

    - name: 'Ensure existing Go installation is removed'
      ansible.builtin.file:
        path: '/usr/local/go'
        state: 'absent'

    - name: 'Ensure Go {{ golang__golang_version }} is installed' # noqa: name[template]
      ansible.builtin.unarchive:
        dest: '/usr/local'
        group: 'root'
        owner: 'root'
        remote_src: true
        src: '{{ golang__download_cache_directory }}/go{{ golang__golang_version }}.linux-amd64.tar.gz'

- name: 'Ensure Ansible local facts directory exists'
  ansible.builtin.file:
    mode: '0755'
    path: '/etc/ansible/facts.d'
    state: 'directory'

- name: 'Ensure Go-related local facts exists'
  ansible.builtin.template:
    dest: '/etc/ansible/facts.d/golang.fact'
    group: 'root'
    mode: '0644'
    owner: 'root'
    src: 'golang.fact.j2'
  register: __golang_facts

- name: 'Ensure Ansible facts are up-to-date'
  ansible.builtin.setup: # noqa: no-handler
    filter: 'ansible_local'
  when: __golang_facts is changed
